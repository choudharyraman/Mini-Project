//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LMSEntities : DbContext
    {
        public LMSEntities()
            : base("name=LMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdminRegistration> AdminRegistrations { get; set; }
        public virtual DbSet<ChapterMaster> ChapterMasters { get; set; }
        public virtual DbSet<LearnerProfile> LearnerProfiles { get; set; }
        public virtual DbSet<SubjectMaster> SubjectMasters { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TopicMaster> TopicMasters { get; set; }
        public virtual DbSet<ViewStatu> ViewStatus { get; set; }
    
        public virtual ObjectResult<ADMINREG_ALL_Result> ADMINREG_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMINREG_ALL_Result>("ADMINREG_ALL");
        }
    
        public virtual int ADMINREG_DELETE(string eMAIL)
        {
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADMINREG_DELETE", eMAILParameter);
        }
    
        public virtual ObjectResult<ADMINREG_GETUSER_Result> ADMINREG_GETUSER(string eMAIL)
        {
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ADMINREG_GETUSER_Result>("ADMINREG_GETUSER", eMAILParameter);
        }
    
        public virtual int ADMINREG_INSERT(string eMAIL, string fNAME, string lNAME, string pASSWORD)
        {
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fNAMEParameter = fNAME != null ?
                new ObjectParameter("FNAME", fNAME) :
                new ObjectParameter("FNAME", typeof(string));
    
            var lNAMEParameter = lNAME != null ?
                new ObjectParameter("LNAME", lNAME) :
                new ObjectParameter("LNAME", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADMINREG_INSERT", eMAILParameter, fNAMEParameter, lNAMEParameter, pASSWORDParameter);
        }
    
        public virtual int ADMINREG_UPDATE(string eMAIL, string fNAME, string lNAME, string pASSWORD)
        {
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fNAMEParameter = fNAME != null ?
                new ObjectParameter("FNAME", fNAME) :
                new ObjectParameter("FNAME", typeof(string));
    
            var lNAMEParameter = lNAME != null ?
                new ObjectParameter("LNAME", lNAME) :
                new ObjectParameter("LNAME", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADMINREG_UPDATE", eMAILParameter, fNAMEParameter, lNAMEParameter, pASSWORDParameter);
        }
    
        public virtual ObjectResult<CHAPTERMASTER_ALL_Result> CHAPTERMASTER_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CHAPTERMASTER_ALL_Result>("CHAPTERMASTER_ALL");
        }
    
        public virtual int CHAPTERMASTER_DELETE(string cNAME)
        {
            var cNAMEParameter = cNAME != null ?
                new ObjectParameter("CNAME", cNAME) :
                new ObjectParameter("CNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CHAPTERMASTER_DELETE", cNAMEParameter);
        }
    
        public virtual ObjectResult<CHAPTERMASTER_GETUSER_Result> CHAPTERMASTER_GETUSER(string chapterName)
        {
            var chapterNameParameter = chapterName != null ?
                new ObjectParameter("ChapterName", chapterName) :
                new ObjectParameter("ChapterName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CHAPTERMASTER_GETUSER_Result>("CHAPTERMASTER_GETUSER", chapterNameParameter);
        }
    
        public virtual int CHAPTERMASTER_INSERT(string cNAME, Nullable<int> sUBID, Nullable<System.DateTime> lASTUP)
        {
            var cNAMEParameter = cNAME != null ?
                new ObjectParameter("CNAME", cNAME) :
                new ObjectParameter("CNAME", typeof(string));
    
            var sUBIDParameter = sUBID.HasValue ?
                new ObjectParameter("SUBID", sUBID) :
                new ObjectParameter("SUBID", typeof(int));
    
            var lASTUPParameter = lASTUP.HasValue ?
                new ObjectParameter("LASTUP", lASTUP) :
                new ObjectParameter("LASTUP", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CHAPTERMASTER_INSERT", cNAMEParameter, sUBIDParameter, lASTUPParameter);
        }
    
        public virtual int CHAPTERMASTER_UPDATE(string cNAME, Nullable<int> sUBID, Nullable<System.DateTime> lASTUP)
        {
            var cNAMEParameter = cNAME != null ?
                new ObjectParameter("CNAME", cNAME) :
                new ObjectParameter("CNAME", typeof(string));
    
            var sUBIDParameter = sUBID.HasValue ?
                new ObjectParameter("SUBID", sUBID) :
                new ObjectParameter("SUBID", typeof(int));
    
            var lASTUPParameter = lASTUP.HasValue ?
                new ObjectParameter("LASTUP", lASTUP) :
                new ObjectParameter("LASTUP", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CHAPTERMASTER_UPDATE", cNAMEParameter, sUBIDParameter, lASTUPParameter);
        }
    
        public virtual ObjectResult<LEARNPROF_ALL_Result> LEARNPROF_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LEARNPROF_ALL_Result>("LEARNPROF_ALL");
        }
    
        public virtual int LEARNPROF_DELETE(string eMAIL)
        {
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LEARNPROF_DELETE", eMAILParameter);
        }
    
        public virtual ObjectResult<LEARNPROF_GETUSER_Result> LEARNPROF_GETUSER(string eMAIL)
        {
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LEARNPROF_GETUSER_Result>("LEARNPROF_GETUSER", eMAILParameter);
        }
    
        public virtual int LEARNPROF_INSERT(string eMAIL, string fNAME, string lNAME, Nullable<System.DateTime> dOB, string gENDER, string rEM, string pASSWORD, string sTATUS)
        {
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fNAMEParameter = fNAME != null ?
                new ObjectParameter("FNAME", fNAME) :
                new ObjectParameter("FNAME", typeof(string));
    
            var lNAMEParameter = lNAME != null ?
                new ObjectParameter("LNAME", lNAME) :
                new ObjectParameter("LNAME", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var gENDERParameter = gENDER != null ?
                new ObjectParameter("GENDER", gENDER) :
                new ObjectParameter("GENDER", typeof(string));
    
            var rEMParameter = rEM != null ?
                new ObjectParameter("REM", rEM) :
                new ObjectParameter("REM", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LEARNPROF_INSERT", eMAILParameter, fNAMEParameter, lNAMEParameter, dOBParameter, gENDERParameter, rEMParameter, pASSWORDParameter, sTATUSParameter);
        }
    
        public virtual int LEARNPROF_UPDATE(string eMAIL, string fNAME, string lNAME, Nullable<System.DateTime> dOB, string gENDER, string rEM, string pASSWORD, string sTATUS)
        {
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fNAMEParameter = fNAME != null ?
                new ObjectParameter("FNAME", fNAME) :
                new ObjectParameter("FNAME", typeof(string));
    
            var lNAMEParameter = lNAME != null ?
                new ObjectParameter("LNAME", lNAME) :
                new ObjectParameter("LNAME", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var gENDERParameter = gENDER != null ?
                new ObjectParameter("GENDER", gENDER) :
                new ObjectParameter("GENDER", typeof(string));
    
            var rEMParameter = rEM != null ?
                new ObjectParameter("REM", rEM) :
                new ObjectParameter("REM", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LEARNPROF_UPDATE", eMAILParameter, fNAMEParameter, lNAMEParameter, dOBParameter, gENDERParameter, rEMParameter, pASSWORDParameter, sTATUSParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<SUBMASTER_ALL_Result> SUBMASTER_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SUBMASTER_ALL_Result>("SUBMASTER_ALL");
        }
    
        public virtual int SUBMASTER_DELETE(Nullable<int> sUBID)
        {
            var sUBIDParameter = sUBID.HasValue ?
                new ObjectParameter("SUBID", sUBID) :
                new ObjectParameter("SUBID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SUBMASTER_DELETE", sUBIDParameter);
        }
    
        public virtual ObjectResult<SUBMASTER_GETUSER_Result> SUBMASTER_GETUSER(Nullable<int> subjectId)
        {
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("SubjectId", subjectId) :
                new ObjectParameter("SubjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SUBMASTER_GETUSER_Result>("SUBMASTER_GETUSER", subjectIdParameter);
        }
    
        public virtual int SUBMASTER_INSERT(Nullable<int> sUBID, string sUBNAME, Nullable<System.DateTime> lASTUP, string dOMAIN)
        {
            var sUBIDParameter = sUBID.HasValue ?
                new ObjectParameter("SUBID", sUBID) :
                new ObjectParameter("SUBID", typeof(int));
    
            var sUBNAMEParameter = sUBNAME != null ?
                new ObjectParameter("SUBNAME", sUBNAME) :
                new ObjectParameter("SUBNAME", typeof(string));
    
            var lASTUPParameter = lASTUP.HasValue ?
                new ObjectParameter("LASTUP", lASTUP) :
                new ObjectParameter("LASTUP", typeof(System.DateTime));
    
            var dOMAINParameter = dOMAIN != null ?
                new ObjectParameter("DOMAIN", dOMAIN) :
                new ObjectParameter("DOMAIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SUBMASTER_INSERT", sUBIDParameter, sUBNAMEParameter, lASTUPParameter, dOMAINParameter);
        }
    
        public virtual int SUBMASTER_UPDATE(Nullable<int> sUBID, string sUBNAME, Nullable<System.DateTime> lASTUP, string dOMAIN)
        {
            var sUBIDParameter = sUBID.HasValue ?
                new ObjectParameter("SUBID", sUBID) :
                new ObjectParameter("SUBID", typeof(int));
    
            var sUBNAMEParameter = sUBNAME != null ?
                new ObjectParameter("SUBNAME", sUBNAME) :
                new ObjectParameter("SUBNAME", typeof(string));
    
            var lASTUPParameter = lASTUP.HasValue ?
                new ObjectParameter("LASTUP", lASTUP) :
                new ObjectParameter("LASTUP", typeof(System.DateTime));
    
            var dOMAINParameter = dOMAIN != null ?
                new ObjectParameter("DOMAIN", dOMAIN) :
                new ObjectParameter("DOMAIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SUBMASTER_UPDATE", sUBIDParameter, sUBNAMEParameter, lASTUPParameter, dOMAINParameter);
        }
    
        public virtual ObjectResult<TOPICMASTER_ALL_Result> TOPICMASTER_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOPICMASTER_ALL_Result>("TOPICMASTER_ALL");
        }
    
        public virtual int TOPICMASTER_DELETE(string tNAME)
        {
            var tNAMEParameter = tNAME != null ?
                new ObjectParameter("TNAME", tNAME) :
                new ObjectParameter("TNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TOPICMASTER_DELETE", tNAMEParameter);
        }
    
        public virtual ObjectResult<TOPICMASTER_GETUSER_Result> TOPICMASTER_GETUSER(string topicName)
        {
            var topicNameParameter = topicName != null ?
                new ObjectParameter("TopicName", topicName) :
                new ObjectParameter("TopicName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TOPICMASTER_GETUSER_Result>("TOPICMASTER_GETUSER", topicNameParameter);
        }
    
        public virtual int TOPICMASTER_INSERT(string tNAME, Nullable<int> sUBID, string cNAME, Nullable<System.DateTime> lASTUP, string cONTURL)
        {
            var tNAMEParameter = tNAME != null ?
                new ObjectParameter("TNAME", tNAME) :
                new ObjectParameter("TNAME", typeof(string));
    
            var sUBIDParameter = sUBID.HasValue ?
                new ObjectParameter("SUBID", sUBID) :
                new ObjectParameter("SUBID", typeof(int));
    
            var cNAMEParameter = cNAME != null ?
                new ObjectParameter("CNAME", cNAME) :
                new ObjectParameter("CNAME", typeof(string));
    
            var lASTUPParameter = lASTUP.HasValue ?
                new ObjectParameter("LASTUP", lASTUP) :
                new ObjectParameter("LASTUP", typeof(System.DateTime));
    
            var cONTURLParameter = cONTURL != null ?
                new ObjectParameter("CONTURL", cONTURL) :
                new ObjectParameter("CONTURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TOPICMASTER_INSERT", tNAMEParameter, sUBIDParameter, cNAMEParameter, lASTUPParameter, cONTURLParameter);
        }
    
        public virtual int TOPICMASTER_UPDATE(string tNAME, Nullable<int> sUBID, string cNAME, Nullable<System.DateTime> lASTUP, string cONTURL)
        {
            var tNAMEParameter = tNAME != null ?
                new ObjectParameter("TNAME", tNAME) :
                new ObjectParameter("TNAME", typeof(string));
    
            var sUBIDParameter = sUBID.HasValue ?
                new ObjectParameter("SUBID", sUBID) :
                new ObjectParameter("SUBID", typeof(int));
    
            var cNAMEParameter = cNAME != null ?
                new ObjectParameter("CNAME", cNAME) :
                new ObjectParameter("CNAME", typeof(string));
    
            var lASTUPParameter = lASTUP.HasValue ?
                new ObjectParameter("LASTUP", lASTUP) :
                new ObjectParameter("LASTUP", typeof(System.DateTime));
    
            var cONTURLParameter = cONTURL != null ?
                new ObjectParameter("CONTURL", cONTURL) :
                new ObjectParameter("CONTURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TOPICMASTER_UPDATE", tNAMEParameter, sUBIDParameter, cNAMEParameter, lASTUPParameter, cONTURLParameter);
        }
    
        public virtual ObjectResult<VIEWSTATUS_ALL_Result> VIEWSTATUS_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VIEWSTATUS_ALL_Result>("VIEWSTATUS_ALL");
        }
    
        public virtual int VIEWSTATUS_DELETE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VIEWSTATUS_DELETE", iDParameter);
        }
    
        public virtual ObjectResult<VIEWSTATUS_GETUSER_Result> VIEWSTATUS_GETUSER(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VIEWSTATUS_GETUSER_Result>("VIEWSTATUS_GETUSER", iDParameter);
        }
    
        public virtual int VIEWSTATUS_INSERT(Nullable<int> iD, string eMAIL, Nullable<int> sUBID, string cNAME, string tNAME, Nullable<System.DateTime> vTIME, string cOMMENT)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var sUBIDParameter = sUBID.HasValue ?
                new ObjectParameter("SUBID", sUBID) :
                new ObjectParameter("SUBID", typeof(int));
    
            var cNAMEParameter = cNAME != null ?
                new ObjectParameter("CNAME", cNAME) :
                new ObjectParameter("CNAME", typeof(string));
    
            var tNAMEParameter = tNAME != null ?
                new ObjectParameter("TNAME", tNAME) :
                new ObjectParameter("TNAME", typeof(string));
    
            var vTIMEParameter = vTIME.HasValue ?
                new ObjectParameter("VTIME", vTIME) :
                new ObjectParameter("VTIME", typeof(System.DateTime));
    
            var cOMMENTParameter = cOMMENT != null ?
                new ObjectParameter("COMMENT", cOMMENT) :
                new ObjectParameter("COMMENT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VIEWSTATUS_INSERT", iDParameter, eMAILParameter, sUBIDParameter, cNAMEParameter, tNAMEParameter, vTIMEParameter, cOMMENTParameter);
        }
    
        public virtual int VIEWSTATUS_UPDATE(Nullable<int> iD, string eMAIL, Nullable<int> sUBID, string cNAME, string tNAME, Nullable<System.DateTime> vTIME, string cOMMENT)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var sUBIDParameter = sUBID.HasValue ?
                new ObjectParameter("SUBID", sUBID) :
                new ObjectParameter("SUBID", typeof(int));
    
            var cNAMEParameter = cNAME != null ?
                new ObjectParameter("CNAME", cNAME) :
                new ObjectParameter("CNAME", typeof(string));
    
            var tNAMEParameter = tNAME != null ?
                new ObjectParameter("TNAME", tNAME) :
                new ObjectParameter("TNAME", typeof(string));
    
            var vTIMEParameter = vTIME.HasValue ?
                new ObjectParameter("VTIME", vTIME) :
                new ObjectParameter("VTIME", typeof(System.DateTime));
    
            var cOMMENTParameter = cOMMENT != null ?
                new ObjectParameter("COMMENT", cOMMENT) :
                new ObjectParameter("COMMENT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VIEWSTATUS_UPDATE", iDParameter, eMAILParameter, sUBIDParameter, cNAMEParameter, tNAMEParameter, vTIMEParameter, cOMMENTParameter);
        }
    }
}
